using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using Mcd.HospitalManagementSystem.Data;
using Mcd.HospitaManagementSystem.Business;
using Mcd.HospitalManagement.Web.Models;
 
namespace Mcd.HospitalManagement.Web.Controllers
{
    public class PatientFeedbackController : Controller
    {
        private LP_HMSDbEntities db = new LP_HMSDbEntities();
        IDoctorManager doctors;
        IPatientManager patientManager;
        PatientModel patient;
        DoctorModel doctorModel;
        PatientFeedbackModel patientFeedBack;

        public PatientFeedbackController()
        {
            patientManager = new PatientManager();
          
            doctors = new DoctorManager();

        }

        // GET: /PatientFeedback/
        public ActionResult Index()
        {
            IEnumerable<PatientFeedbackDTO> patientFeedBacksDTO = patientManager.ViewAllPatientFeedbackDetails();
            IEnumerable<PatientFeedbackModel> patientFeedBackDetails = patientFeedBacksDTO.Select(x => new PatientFeedbackModel
            {
              Id=x.Id,
              PatientDetailId=x.PatientDetailId,
              DoctorId=x.DoctorId,
              DoctorName=x.DoctorName,
              FeedbackDate=x.FeedbackDate,
              FeedbackDescription=x.FeedbackDescription,
              PatientName=x.PatientName
            }).ToList();

            return View(patientFeedBackDetails);
        }
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }

            PatientFeedbackDTO patientFeedbackDTO = patientManager.ViewAllPatientFeedbackDetailsAccordingToId(id);
            patientFeedBack = new PatientFeedbackModel()
            {
    
              
                Id=patientFeedbackDTO.Id,
                DoctorId=patientFeedbackDTO.DoctorId,
                DoctorName=patientFeedbackDTO.DoctorName,
                PatientId=patientFeedbackDTO.PatientId,
                PatientName=patientFeedbackDTO.PatientName,
                FeedbackDate=patientFeedbackDTO.FeedbackDate,
                FeedbackDescription=patientFeedbackDTO.FeedbackDescription,
                PatientDetailId=patientFeedbackDTO.PatientDetailId




            };

            if (patientFeedBack == null)
            {
                return HttpNotFound();
            }
            return View(patientFeedBack);
        }

        // GET: /PatientFeedback/Create
        public ActionResult Create()
         {
            //get patient details
            patient = new PatientModel();
            var patients = patientManager.fillPatients();
            IEnumerable<PatientFeedbackModel> patientsList = patients.Select(c => new PatientFeedbackModel
                                        
                                              {
                                                  PatientId = c.Id,
                                                  PatientName = c.Name,
                                              }).ToList();


          
            //ViewBag.PatientId = new SelectList(patientsList, "Id", "Name");
            return View(patientsList);
        }

        // POST: /PatientFeedback/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        public ActionResult GetDoctorsById(int PatientId)
        {
            

            if (String.IsNullOrEmpty(PatientId.ToString()))
            {
                throw new ArgumentNullException("PatientId");
            }

            var doctors = patientManager.ViewDoctorAccordingToPatientId(PatientId);
            IEnumerable<PatientFeedbackModel> doctorList = doctors.Select(x => new PatientFeedbackModel
            
                                                    {
                                                        DoctorId=(int)x.DoctorId,
                                                        DoctorName=x.DoctorName

                                                    }).ToList();
          
            return PartialView("PatientFeedBackDetails", doctorList);

        }

        [HttpPost]
        public ActionResult InsertFeedBack(string patientId, string doctorId, string feedbackDate, string feedBackDescription)
        {


            var patientDetailId = patientManager.getPatientDetailId(Int32.Parse(patientId));

            var patientFeedBack = new PatientFeedbackDTO()
            {

                DoctorId = int.Parse(doctorId),
                PatientDetailId = patientDetailId.PatientDetailId,
                FeedbackDate =Convert.ToDateTime (feedbackDate),
                FeedbackDescription = feedBackDescription

            };

            if (ModelState.IsValid)
            {
                patientManager.InsertPatientFeedBack(patientFeedBack);
                return RedirectToAction("Index");
            }
            else
            {

            }

        

            return View();
        }

        //// GET: /PatientFeedback/Edit/5
        //public ActionResult Edit(int? id)
        //{

        //}

        //// POST: /PatientFeedback/Edit/5
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult Edit([Bind(Include="id,DoctorId,PatientDetailId,FeedbackDate,FeedbackDescription")] PatientFeedback patientfeedback)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        db.Entry(patientfeedback).State = EntityState.Modified;
        //        db.SaveChanges();
        //        return RedirectToAction("Index");
        //    }
        //    ViewBag.DoctorId = new SelectList(db.Doctors, "Id", "Name", patientfeedback.DoctorId);
        //    ViewBag.PatientDetailId = new SelectList(db.PatientDetails, "PatientDetailId", "PatientDetailId", patientfeedback.PatientDetailId);
        //    return View(patientfeedback);
        //}

        //// GET: /PatientFeedback/Delete/5
        //public ActionResult Delete(int? id)
        //{
        //    if (id == null)
        //    {
        //        return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        //    }
        //    PatientFeedback patientfeedback = db.PatientFeedbacks.Find(id);
        //    if (patientfeedback == null)
        //    {
        //        return HttpNotFound();
        //    }
        //    return View(patientfeedback);
        //}

        //// POST: /PatientFeedback/Delete/5
        //[HttpPost, ActionName("Delete")]
        //[ValidateAntiForgeryToken]
        //public ActionResult DeleteConfirmed(int id)
        //{
        //    PatientFeedback patientfeedback = db.PatientFeedbacks.Find(id);
        //    db.PatientFeedbacks.Remove(patientfeedback);
        //    db.SaveChanges();
        //    return RedirectToAction("Index");
        //}

        //protected override void Dispose(bool disposing)
        //{
        //    if (disposing)
        //    {
        //        db.Dispose();
        //    }
        //    base.Dispose(disposing);
        //}
    }
}
