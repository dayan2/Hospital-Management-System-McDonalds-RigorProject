@model Mcd.HospitalManagement.Web.Models.DoctorRecommendationModel

@{
    ViewBag.Title = "UpdateDoctorRecommendationDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>UpdateDoctorRecommendationDetails</h2>
<div class="row">
    <div class="col-xs-3">
        <ol class="breadcrumb">
            @if ((string)Session["USERROLE"] == "Admin")
            {
                <li><a href="~/AdminHome/Index">Home</a></li>
            }
            else
            {
                <li><a href="~/HomePage/HomePageForClerk">Home</a></li>
            }
            <li class="active">Edit Feedback Deatails</li>
        </ol>
    </div>
</div>
<div class="col-xs-2">
    <ul class="nav nav-pills" role="tablist">

        <li role="presentation"><a href="~/Patient/Index">View Patient</a></li>
        <li role="presentation"><a href="~/PatientAdmissionDetails/Index">Patient Details</a></li>
        <li role="presentation"><a href="~/PatientFeedback/Index">FeedBack Details</a></li>
 

    </ul>
</div>

<div class="col-xs-10">
    @using (Html.BeginForm("UpdateDoctorRecommendationDetails", "DoctorRecommendation", FormMethod.Post, new { @id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>DoctorRecommendationModel</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id, new { @id = "id" })

            <div class="form-group">
                @Html.LabelFor(model => model.RecomendedDoctorId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RecomendedDoctorId)
                    @Html.ValidationMessageFor(model => model.RecomendedDoctorId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RecomendedDoctorName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RecomendedDoctorName)
                    @Html.ValidationMessageFor(model => model.RecomendedDoctorName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CurrentDoctorId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentDoctorId)
                    @Html.ValidationMessageFor(model => model.CurrentDoctorId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CurrentDoctorName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentDoctorName)
                    @Html.ValidationMessageFor(model => model.CurrentDoctorName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PatientId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PatientId)
                    @Html.ValidationMessageFor(model => model.PatientId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PatientName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PatientName)
                    @Html.ValidationMessageFor(model => model.PatientName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reason, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Reason)
                    @Html.ValidationMessageFor(model => model.Reason)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" id="submit" />
                    @if ((string)Session["USERROLE"] == "Admin")
                    {
                        <a href="~/AdminHome/Index" class="btn btn-primary">Cancel</a>
                    }
                    else
                    {
                        <a href="~/HomePage/HomePageForClerk" class="btn btn-primary">Cancel</a>
                    }
                </div>
            </div>
        </div>
    }
    </div>
    @section Scripts {
        @*@Scripts.Render("~/bundles/jqueryval")*@

        <script type="text/javascript">

            $(document).ready(function () {
                var jsonObj = $('#form').serialize();

                $("#form").validate({
                    rules: {
                        "id": {
                            required: true
                        }
                    },
                    //perform an AJAX post to ajax.php
                    submitHandler: function () {

                        $.ajax({
                            type: "POST",
                            url: '@Url.Content("~/DoctorRecommendation/UpdateDoctorRecommendationDetails")',
                            data: $('#form').serialize(),
                            success: function (data) {
                                //alert(data.Message);

                                $('#submit').hide();
                                if (data.Message == "You have successfully modified your record!") {

                                    toastr.options = {
                                        "closeButton": true,
                                        "debug": false,
                                        "newestOnTop": true,
                                        "progressBar": true,
                                        "positionClass": "toast-top-full-width",
                                        "preventDuplicates": true,
                                        "onclick": null,
                                        "showDuration": "5000",
                                        "hideDuration": "5000",
                                        "timeOut": "5000",
                                        "extendedTimeOut": "5000",
                                        "showEasing": "swing",
                                        "hideEasing": "linear",
                                        "showMethod": "fadeIn",
                                        "hideMethod": "fadeOut"
                                    }
                                    toastr["success"]("You have successfully modified your record!", "Success!!");

                                }
                                else {

                                    toastr.options = {
                                        "closeButton": true,
                                        "debug": false,
                                        "newestOnTop": true,
                                        "progressBar": true,
                                        "positionClass": "toast-top-full-width",
                                        "preventDuplicates": true,
                                        "onclick": null,
                                        "showDuration": "5000",
                                        "hideDuration": "5000",
                                        "timeOut": "5000",
                                        "extendedTimeOut": "5000",
                                        "showEasing": "swing",
                                        "hideEasing": "linear",
                                        "showMethod": "fadeIn",
                                        "hideMethod": "fadeOut"
                                    }
                                    toastr["error"]("Please try again!!", "Error!!");

                                }


                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert("Error: " + errorThrown + " , Please try again");
                            }
                        });
                        return false;

                    }
                });
            });



        </script>
    }


