@model Mcd.HospitalManagement.Web.Models.PatientFeedbackModel

@{
    ViewBag.Title = "EditPatientFeedBack";
}

<h2>Edit</h2>

<div class="col-xs-2">
    <ul class="nav nav-pills" role="tablist">
        <li role="presentation"><a href="~/PatientFeedback/Create">Add Feedback</a></li>
        <li role="presentation"><a href="~/Patient/Index">View Patient</a></li>
        <li role="presentation" class="active"><a href="~/PatientAdmissionDetails/Index">Patient Details</a></li>

    </ul>
</div>

<div class="col-xs-10">
    @using (Html.BeginForm("EditPatientFeedBack", "EditPatientFeedBack", FormMethod.Post, new { @id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Patient_Detail</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.PatientName, "PatientName", new { @class = "control-label col-md-2", style = "width: 150px;" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.PatientName, new { @class = "form-control", @name = "PatientName" })
                    @Html.HiddenFor(model=>model.PatientName)
                    @Html.HiddenFor(model=>model.PatientId)
                    @Html.ValidationMessageFor(model => model.PatientName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorName, "Doctor Name", new { @class = "control-label col-md-2", style = "width: 150px;" })
                <div class="col-md-10">

                    @Html.DisplayFor(model => model.DoctorName, new { @class = "btn-group-vertical", @name = "DoctorName" })
                    @Html.HiddenFor(model=>model.DoctorName)
                    @Html.HiddenFor(model=>model.DoctorId)
                    @Html.ValidationMessageFor(model => model.DoctorName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeedbackDescription, "Feedback Description", new { @class = "control-label col-md-2", style = "width: 150px;" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.FeedbackDescription, new { @class = "btn-group-vertical", @name = "FeedbackDescription" })
                    @Html.ValidationMessageFor(model => model.FeedbackDescription)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeedbackDate, "Feedback Date", new { @class = "control-label col-md-2", style = "width: 150px;" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FeedbackDate, new { @class = "form-control", @name = "FeedbackDate" })
                    @Html.ValidationMessageFor(model => model.FeedbackDate)
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" id="submit" />
                    <a href="~/HomePage/HomePageForClerk" class="btn btn-default">Cancel</a>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            $('#FeedbackDate').datepicker({
                changeMonth: true,
                changeYear: true
            });

            var jsonObj = $('#form').serialize();
            alert(jsonObj);


            //validation rules
            $("#form").validate({
                rules: {
                    "PatientName": {
                        required: true
                    },
                    "DoctorName": {
                        required: true
                    },
                    "Ward Number": {
                        required: true
                    },
                    "FeedbackDescription": {
                        required: true
                    },
                    "FeedbackDate": {
                        required: true
                    }
                },
                //perform an AJAX post to ajax.php
                submitHandler: function () {



                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("EditPatientFeedBack")',
                        data: $('#form').serialize(),
                        success: function (data) {
                            alert(data.Message);

                            $('#submit').hide();
                            if (data.Message == "You have successfully modified your record!") {

                                toastr.options = {
                                    "closeButton": true,
                                    "debug": false,
                                    "newestOnTop": true,
                                    "progressBar": true,
                                    "positionClass": "toast-top-full-width",
                                    "preventDuplicates": true,
                                    "onclick": null,
                                    "showDuration": "5000",
                                    "hideDuration": "5000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "5000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                }
                                toastr["success"]("You have successfully inserted your record!", "Success!!");

                            }
                            else {

                                toastr.options = {
                                    "closeButton": true,
                                    "debug": false,
                                    "newestOnTop": true,
                                    "progressBar": true,
                                    "positionClass": "toast-top-full-width",
                                    "preventDuplicates": true,
                                    "onclick": null,
                                    "showDuration": "5000",
                                    "hideDuration": "5000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "5000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                }
                                toastr["error"]("Please try again!!", "Error!!");

                            }


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("Error: " + errorThrown + " , Please try again");
                        }
                    });
                    return false;



                }
            });


        });

    </script>
}
