#region Using Directives
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
#endregion



namespace Mcd.HospitaManagementSystem.Business
{
    public class DoctorRecommendationManager : IDoctorRecommendationManager
    {
        #region private fields
        private DoctorRecommendationDetails doctorRecommendationDetails;
        #endregion

        #region constructors
        public DoctorRecommendationManager()
        {
            this.doctorRecommendationDetails = new DoctorRecommendationDetails();
        }
        #endregion


        #region Public Methods

        /// <summary>
        /// Get all DoctorRecommendationDetails from DoctorRecommendationDetails class and return it to the controller
        /// </summary>
        /// <returns>DoctorRecommendation type of list is passed to the controller</returns>
        IEnumerable<DoctorRecommendationDTO> IDoctorRecommendationManager.GetDoctorRecommendationDetails()
        {
            return doctorRecommendationDetails.GetDoctorRecommendationDetails();
        }

        /// <summary>
        /// Sending DoctorRecommendation object into DoctorRecommendationDetails class to be saved
        /// </summary>
        /// <param name="doctor">DoctorRecommendationDTO doctor object is passed here to store PatientTransfer records</param>
        bool IDoctorRecommendationManager.SaveTransferDoctorDetails(DoctorRecommendationDTO doctor)
        {
            return doctorRecommendationDetails.SaveTransferDoctorDetails(doctor);
        }

        /// <summary>
        /// Get DoctorRecommendation details by ID
        /// </summary>
        /// <param name="id">DoctorRecommendation ID is passed here to get the details</param>
        /// <returns>DoctorRecommendation type of object</returns>
        DoctorRecommendationDTO IDoctorRecommendationManager.GetDoctorRecommendationById(int id)
        {
            return doctorRecommendationDetails.GetDoctorRecommendationById(id);
        }

        /// <summary>
        /// Remove DoctorRecommendation details from DB
        /// </summary>
        /// <param name="id">DoctorRecommendation ID is passed here to be removed</param>
        /// <returns>bool result is returned to the controller</returns>
        bool IDoctorRecommendationManager.RemoveDoctorRecommendationDetails(int id)
        {
            return doctorRecommendationDetails.RemoveDoctorRecommendationDetails(id);
        }
        #endregion







        
    }
}
