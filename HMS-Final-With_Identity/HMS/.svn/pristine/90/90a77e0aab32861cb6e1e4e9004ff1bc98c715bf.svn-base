using Mcd.HospitalManagement.Web.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using Mcd.HospitaManagementSystem.Business;


namespace Mcd.HospitalManagement.Web.Controllers
{
    public class PatientAdmissionDetailsController : Controller
    {

        private IPatientManager patientManager;
        PatientAdmissionDetailsModel patientAdmissionDetails;
        PatientModel patient;
        private IWards wards;
        WardDetailsModel wardDetailsModel;
        DoctorModel doctorModel;
        BedModel bedModel;
        AllPatientDetailsModel allPatientDetailModel;
        AllPatientDTO allPatientDTO;


        public PatientAdmissionDetailsController()
        {
            patientManager = new PatientManager();
            wards = new WardDetails();
        }
        // GET: /PatientAdmissionDetails/
        public ActionResult Index()
        {
          IEnumerable<AllPatientDTO> patientAdmissionDTO = patientManager.ViewAllPatientAdmissionDetails();
          IEnumerable<PatientAdmissionDetailsModel> patientAdmissionDetails = patientAdmissionDTO.Select(x => new PatientAdmissionDetailsModel
          {
                  PatientDetailId=x.PatientDetailId,
                  PatientId = x.PatientId,
                  Address=x.Address,
                  MobileNo=x.MobileNo,
                  AdmitDate=x.AdmitDate,
                  Name = x.Name,
                  WardNo = x.WardNo,
                  WardId = x.WardId,
                  BedTicketNo = x.BedTicketNo,
                  BedId = x.BedId,
                  DoctorName = x.DoctorName,
                  DoctorId = x.DoctorId,
                  IsDischarged = x.IsDischarged,          
          }).ToList();
         
            return View(patientAdmissionDetails);

        }

        //// GET: /PatientAdmissionDetails/Details/5
        public ActionResult DetailsPatientAdmission(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }

            AllPatientDTO patientAdmissionDTO = patientManager.ViewPatientRelatedData(id);
            patientAdmissionDetails = new PatientAdmissionDetailsModel()
            {
                PatientId = patientAdmissionDTO.PatientId,
                PatientDetailId = patientAdmissionDTO.PatientDetailId,
                Address=patientAdmissionDTO.Address,
                MobileNo=patientAdmissionDTO.MobileNo,
                AdmitDate=patientAdmissionDTO.AdmitDate,
                Name = patientAdmissionDTO.Name,
                WardNo = patientAdmissionDTO.WardNo,
                WardId = patientAdmissionDTO.WardId,
                BedTicketNo = patientAdmissionDTO.BedTicketNo,
                BedId = patientAdmissionDTO.BedId,
                DoctorName = patientAdmissionDTO.DoctorName,
                DoctorId = patientAdmissionDTO.DoctorId,
                IsDischarged = patientAdmissionDTO.IsDischarged,




            };

            if (patientAdmissionDetails == null)
            {
                return HttpNotFound();
            }
            return View(patientAdmissionDetails);
        }

        // GET: /PatientAdmissionDetails/Create
        public ActionResult CreatePatientAdmission()
        {
            //get patient details
            patient = new PatientModel();
            var patients = patientManager.fillPatients();
            IEnumerable<PatientModel> PList = from c in patients
                                              select new PatientModel
                                              {
                                                  Id = c.Id,
                                                  Name = c.Name,
                                              };

            //get ward Details

            wardDetailsModel = new WardDetailsModel();
            var wardList = wards.ViewWardDetails();
            IEnumerable<WardDetailsModel> wardDetailList = from w in wardList
                                                           select new WardDetailsModel
                                                           {
                                                               id = w.Id,
                                                               wardNo = w.WardNo,
                                                           };

         
            //get doctor details
            //test data
            List<DoctorModel> doctorList = new List<DoctorModel> { new DoctorModel { Id = 33, Name = "Senevirathne" } };
            IEnumerable<DoctorModel> doctorDetailsList = doctorList;

            //get beds details
            //test data
            List<BedModel> bedModelList = new List<BedModel> { new BedModel { Id = 2, BedTicketNo = "1" } };
            IEnumerable<BedModel> bedDetailList = bedModelList;

            


            ViewBag.BedId = new SelectList(bedDetailList, "Id", "BedTicketNo");
            ViewBag.DoctorId = new SelectList(doctorDetailsList, "Id", "Name");
            ViewBag.PatientId = new SelectList(PList, "Id", "Name");
            ViewBag.WardId = new SelectList(wardDetailList, "Id", "WardNo");
            return View();
        }

        // POST: /PatientAdmissionDetails/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult CreatePatientAdmission([Bind(Include = "PatientDetailId,AdmitDate,BedId,WardId,DoctorId,PatientId,IsDischarged")] PatientAdmissionDetailsModel patientdetail)
        {
            PatientAdmissionDTO patientAdmissionDTO = new PatientAdmissionDTO()
            {
                PatientDetailId = patientdetail.PatientDetailId,
                AdmitDate = patientdetail.AdmitDate,
                BedId = patientdetail.BedId,
                WardId = patientdetail.WardId,
                DoctorId = patientdetail.DoctorId,
                PatientId = patientdetail.PatientId,
                IsDischarged = patientdetail.IsDischarged
            };
            if (ModelState.IsValid)
            {
              if(patientManager.CheckPatientAdmissionAvilabilty(patientAdmissionDTO.PatientId))             
              {               

                    patientManager.InsertPatientAdmissionDetails(patientAdmissionDTO);
                    return RedirectToAction("Index");
              }
              else
              {

                  return new HttpStatusCodeResult(HttpStatusCode.ExpectationFailed, "Patient is already admitted");
               

              }
            }

            //get patient details
            patient = new PatientModel();
            var patients = patientManager.fillPatients();
            IEnumerable<PatientModel> PList = from c in patients
                                              select new PatientModel
                                              {
                                                  Id = c.Id,
                                                  Name = c.Name,
                                              };

            //get ward Details

            wardDetailsModel = new WardDetailsModel();
            var wardList = wards.ViewWardDetails();
            IEnumerable<WardDetailsModel> wardDetailList = from w in wardList
                                                           select new WardDetailsModel
                                                           {
                                                               id = w.Id,
                                                               wardNo = w.WardNo,
                                                           };


            //get doctor details
            //test data
            List<DoctorModel> doctorList = new List<DoctorModel> { new DoctorModel { Id = 33, Name = "Kulasuriya" } };
            IEnumerable<DoctorModel> doctorDetailsList = doctorList;

            //get beds details
            //test data
            List<BedModel> bedModelList = new List<BedModel> { new BedModel { Id = 2, BedTicketNo = "Bed no 20" } };
            IEnumerable<BedModel> bedDetailList = bedModelList;


            ViewBag.BedId = new SelectList(bedDetailList, "Id", "BedTicketNo");
            ViewBag.DoctorId = new SelectList(doctorDetailsList, "Id", "Name");
            ViewBag.PatientId = new SelectList(PList, "Id", "Name");
            ViewBag.WardId = new SelectList(wardDetailList, "Id", "WardNo");


            return View(patientdetail);
        }

        // GET: /PatientAdmissionDetails/Edit/5
        public ActionResult EditPatientAdmission(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }

            AllPatientDTO patientAdmissionDTO = patientManager.ViewPatientRelatedData(id);
            patientAdmissionDetails = new PatientAdmissionDetailsModel()
            {
                PatientId=patientAdmissionDTO.PatientId,
                PatientDetailId=patientAdmissionDTO.PatientDetailId,
                  Address=patientAdmissionDTO.Address,
                MobileNo=patientAdmissionDTO.MobileNo,
                AdmitDate = patientAdmissionDTO.AdmitDate,
                Name=patientAdmissionDTO.Name,
                WardNo=patientAdmissionDTO.WardNo,
                WardId=patientAdmissionDTO.WardId,
                BedTicketNo=patientAdmissionDTO.BedTicketNo,
                BedId=patientAdmissionDTO.BedId,
                DoctorName=patientAdmissionDTO.DoctorName,
                DoctorId=patientAdmissionDTO.DoctorId,
                IsDischarged=patientAdmissionDTO.IsDischarged,




            };

            if (patientAdmissionDetails == null)
            {
                return HttpNotFound();
            }

            //get patient details
            patient = new PatientModel();
            var patients = patientManager.fillPatients();
            IEnumerable<PatientModel> PList = from c in patients
                                              select new PatientModel
                                              {
                                                  Id = c.Id,
                                                  Name = c.Name,
                                              };

            //get ward Details

            wardDetailsModel = new WardDetailsModel();
            var wardList = wards.ViewWardDetails();
            IEnumerable<WardDetailsModel> wardDetailList = from w in wardList
                                                           select new WardDetailsModel
                                                           {
                                                               id = w.Id,
                                                               wardNo = w.WardNo,
                                                           };


            //get doctor details
            //test data
            List<DoctorModel> doctorList = new List<DoctorModel> { new DoctorModel { Id = 33, Name = "Senevirathne" } };
            IEnumerable<DoctorModel> doctorDetailsList = doctorList;

            //get beds details
            //test data
            List<BedModel> bedModelList = new List<BedModel> { new BedModel { Id = 2, BedTicketNo = "1" } };
            IEnumerable<BedModel> bedDetailList = bedModelList;


            ViewBag.BedId = new SelectList(bedDetailList, "Id", "BedTicketNo");
            ViewBag.DoctorId = new SelectList(doctorDetailsList, "Id", "Name");
            ViewBag.PatientId = new SelectList(PList, "Id", "Name");
            ViewBag.WardId = new SelectList(wardDetailList, "Id", "WardNo");
            return View(patientAdmissionDetails);

        }

        //// POST: /PatientAdmissionDetails/Edit/5
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
          [HttpPost, ActionName("EditPatientAdmission")]
        ////[HttpPost]
        ////[ValidateAntiForgeryToken]
        public ActionResult EditPatient([Bind(Include = "PatientDetailId,AdmitDate,BedId,WardId,DoctorId,PatientId,IsDischarged")] PatientAdmissionDetailsModel patientDetail)
        {
            AllPatientDTO patientAdmissionDTO = new AllPatientDTO()
            {
                PatientDetailId = patientDetail.PatientDetailId,
                AdmitDate = patientDetail.AdmitDate,
                BedId = patientDetail.BedId,
                WardId = patientDetail.WardId,
                DoctorId = patientDetail.DoctorId,
                PatientId = patientDetail.PatientId,
                IsDischarged = patientDetail.IsDischarged,



            };
            if (ModelState.IsValid)
            {
            
                 patientManager.EditPatientAdmissionDetails(patientAdmissionDTO);
                 return RedirectToAction("Index");
             
             
            }
            //get patient details
            patient = new PatientModel();
            var patients = patientManager.fillPatients();
            IEnumerable<PatientModel> PList = from c in patients
                                              select new PatientModel
                                              {
                                                  Id = c.Id,
                                                  Name = c.Name,
                                              };

            //get ward Details

            wardDetailsModel = new WardDetailsModel();
            var wardList = wards.ViewWardDetails();
            IEnumerable<WardDetailsModel> wardDetailList = from w in wardList
                                                           select new WardDetailsModel
                                                           {
                                                               id = w.Id,
                                                               wardNo = w.WardNo,
                                                           };


            //get doctor details
            //test data
            List<DoctorModel> doctorList = new List<DoctorModel> { new DoctorModel { Id = 33, Name = "Senevirathne" } };
            IEnumerable<DoctorModel> doctorDetailsList = doctorList;

            //get beds details
            //test data
            List<BedModel> bedModelList = new List<BedModel> { new BedModel { Id = 2, BedTicketNo = "1" } };
            IEnumerable<BedModel> bedDetailList = bedModelList;


            ViewBag.BedId = new SelectList(bedDetailList, "Id", "BedTicketNo");
            ViewBag.DoctorId = new SelectList(doctorDetailsList, "Id", "Name");
            ViewBag.PatientId = new SelectList(PList, "Id", "Name");
            ViewBag.WardId = new SelectList(wardDetailList, "Id", "WardNo");
            return View(patientDetail);
        }

        // GET: /PatientAdmissionDetails/Delete/5
          public ActionResult DeletePatientAdmission(int? id)
          {
              if (id == null)
              {
                  return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
              }
              AllPatientDTO patientAdmissionDTO = patientManager.ViewPatientRelatedData(id);
              patientAdmissionDetails = new PatientAdmissionDetailsModel()
              {
                  AdmitDate=patientAdmissionDTO.AdmitDate,
                  PatientId = patientAdmissionDTO.PatientId,
                  PatientDetailId = patientAdmissionDTO.PatientDetailId,
                  Address=patientAdmissionDTO.Address,
                  MobileNo=patientAdmissionDTO.MobileNo,
                  Name = patientAdmissionDTO.Name,
                  WardNo = patientAdmissionDTO.WardNo,
                  WardId = patientAdmissionDTO.WardId,
                  BedTicketNo = patientAdmissionDTO.BedTicketNo,
                  BedId = patientAdmissionDTO.BedId,
                  DoctorName = patientAdmissionDTO.DoctorName,
                  DoctorId = patientAdmissionDTO.DoctorId,
                  IsDischarged = patientAdmissionDTO.IsDischarged,




              };
              if (patientAdmissionDetails == null)
              {
                  return HttpNotFound();
              }
              return View(patientAdmissionDetails);
          }

        //// POST: /PatientAdmissionDetails/Delete/5
        [HttpPost, ActionName("DeletePatientAdmission")]
        //[ValidateAntiForgeryToken]
          public ActionResult DeleteConfirmed(int?id)
          {
              var avilability = patientManager.ViewPatientAdmissionDetails(id);
              patientAdmissionDetails = new PatientAdmissionDetailsModel()
              {
                  AdmitDate = avilability.AdmitDate,
                  PatientDetailId = avilability.PatientDetailId,
                  WardId = avilability.WardId,
                  BedId = avilability.BedId,
                  DoctorId = avilability.DoctorId,
                  IsDischarged = avilability.IsDischarged,




              };
              if (patientAdmissionDetails == null)
              {
                  return new HttpStatusCodeResult(HttpStatusCode.ExpectationFailed, "PatientDetails cant'delete");
              }
              patientManager.DeletePatientAdmissionDetails(id);
              return RedirectToAction("Index");
          }

        //protected override void Dispose(bool disposing)
        //{
        //    if (disposing)
        //    {
        //        db.Dispose();
        //    }
        //    base.Dispose(disposing);
        //}
    }
}
